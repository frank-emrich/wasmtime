name: "Check for performance regressions"

on:
  pull_request:


# Env variables
env:
  # TODO turn this into a fixed commit eventually (and delete hacking branch)
  benchfx_rev: wasmtime_ci_hacking
  wasmtime_features: unsafe_wasmfx_stacks

jobs:
  bench:
    name: Setup environment, prepare & run benchmarks
    runs-on: ubuntu-latest
    steps:
    - name: Checkout wasmtime
      uses: actions/checkout@v4
      with:
        submodules: true
        path: wasmtime
        fetch-depth: 0

    - name: Checkout benchfx
      uses: actions/checkout@v4
      with:
        repository: 'wasmfx/benchfx'
        ref: ${{ env.benchfx_rev }}
        submodules: true
        path: benchfx
        fetch-depth: 0

    - name: Install hyperfine
      run: cargo install hyperfine

    - name: Install other deps
      run: sudo apt-get install cmake ocaml dune menhir libmenhir-ocaml-dev

    - name: Show context info
      run: |
        echo "$GITHUB_WORKSPACE"
        ls -l "$GITHUB_WORKSPACE"
        ls -l "$GITHUB_WORKSPACE/wasmtime"
        ls -l "$GITHUB_WORKSPACE/benchfx"
        cargo --version
        rustc --version
        echo "GITHUB_BASE_REF: $GITHUB_BASE_REF"
        echo "GITHUB_HEAD_REF: $GITHUB_HEAD_REF"
        echo "GITHUB_SHA: $GITHUB_SHA"

    - name: Initialize benchfx
      run: ./harness.py -v setup --wasmtime-create-worktree-from-development-repo=$GITHUB_WORKSPACE/wasmtime
      working-directory: ./benchfx

    # The next two steps could be combined into one since the second invocation
    # of the harness subsumes the first one.
    # However, that would perform two separate builds of wasmtime (and its cargo
    # dependencies) from scratch. Since Github Actions runners are so slow, we
    # perform the following trick instead:
    # We first build the the base revision of Wasmtime from scratch. In the
    # second step, we then copy the build artifacts from that over to the folder
    # where the second revsion will be built. This effectively means that for
    # the second Wasmtime revision we perform an incremental build on top of the
    # base revision.
    #
    - name: Prepare benchmarking, part 1 (binaryen, first wasmtime revision)
      shell: bash
      working-directory: ./benchfx
      run: |
        ./harness.py -v run --prepare-only \
          --wasmtime-cargo-build-args="--features=$wasmtime_features" \
          "origin/$GITHUB_BASE_REF"

    - name: Prepare benchmarking, part 2 (second wasmtime revision)
      shell: bash
      working-directory: ./benchfx
      run: |
        cp -r tools/external/wasmtime1/target tools/external/wasmtime2/
        ./harness.py -v compare-revs --prepare-only \
          --rev1-wasmtime-cargo-build-args="--features=$wasmtime_features" \
          --rev2-wasmtime-cargo-build-args="--features=$wasmtime_features" \
          "origin/$GITHUB_BASE_REF" "$GITHUB_SHA"
