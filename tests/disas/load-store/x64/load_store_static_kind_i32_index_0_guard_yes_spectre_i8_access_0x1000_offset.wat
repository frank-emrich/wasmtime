;;! target = "x86_64"
;;! test = "compile"
;;! flags = " -C cranelift-enable-heap-access-spectre-mitigation -O static-memory-forced -O static-memory-guard-size=0 -O dynamic-memory-guard-size=0"

;; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
;; !!! GENERATED BY 'make-load-store-tests.sh' DO NOT EDIT !!!
;; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

(module
  (memory i32 1)

  (func (export "do_store") (param i32 i32)
    local.get 0
    local.get 1
    i32.store8 offset=0x1000)

  (func (export "do_load") (param i32) (result i32)
    local.get 0
    i32.load8_u offset=0x1000))

;; wasm[0]::function[0]:
;;    0: pushq   %rbp
;;    1: movq    %rsp, %rbp
;;    4: movq    %rdi, %rax
;;    7: movl    %edx, %edi
;;    9: xorq    %rsi, %rsi
;;    c: movq    %rax, %rdx
;;    f: movq    0x50(%rdx), %rax
;;   13: leaq    0x1000(%rax, %rdi), %r11
;;   1b: cmpq    0xe(%rip), %rdi
;;   22: cmovaq  %rsi, %r11
;;   26: movb    %cl, (%r11)
;;   29: movq    %rbp, %rsp
;;   2c: popq    %rbp
;;   2d: retq
;;   2e: addb    %al, (%rax)
;;
;; wasm[0]::function[1]:
;;   40: pushq   %rbp
;;   41: movq    %rsp, %rbp
;;   44: movq    %rdi, %rcx
;;   47: movl    %edx, %edi
;;   49: xorq    %rsi, %rsi
;;   4c: movq    0x50(%rcx), %rax
;;   50: leaq    0x1000(%rax, %rdi), %r11
;;   58: cmpq    0x11(%rip), %rdi
;;   5f: cmovaq  %rsi, %r11
;;   63: movzbq  (%r11), %rax
;;   67: movq    %rbp, %rsp
;;   6a: popq    %rbp
;;   6b: retq
;;   6c: addb    %al, (%rax)
;;   6e: addb    %al, (%rax)
